{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "node_modules/@babel/runtime/helpers/arrayLikeToArray.js",
    "node_modules/@babel/runtime/helpers/arrayWithoutHoles.js",
    "node_modules/@babel/runtime/helpers/classCallCheck.js",
    "node_modules/@babel/runtime/helpers/createClass.js",
    "node_modules/@babel/runtime/helpers/defineProperty.js",
    "node_modules/@babel/runtime/helpers/interopRequireDefault.js",
    "node_modules/@babel/runtime/helpers/iterableToArray.js",
    "node_modules/@babel/runtime/helpers/nonIterableSpread.js",
    "node_modules/@babel/runtime/helpers/toConsumableArray.js",
    "node_modules/@babel/runtime/helpers/toPrimitive.js",
    "node_modules/@babel/runtime/helpers/toPropertyKey.js",
    "node_modules/@babel/runtime/helpers/typeof.js",
    "node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js",
    "src/compiler/compiler.ts",
    "src/compiler/libs/lexer.ts",
    "src/compiler/libs/parser.ts",
    "src/const/opcodes.ts",
    "src/index.ts",
    "src/main.ts",
    "src/vm/vm.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "function _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    \"default\": e\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",
    "import { OpCode } from \"../const/opcodes\";\nimport { AnyAstNode, BinaryExpressionNode, BlockStatementNode, CallExpressionNode, CompiledFunction, ExpressionStatementNode, ForStatementNode, FunctionDeclarationNode, IdentifierNode, IfStatementNode, NumericLiteralNode, ProgramNode, ReturnStatementNode, SnowFallSettings, StatementNode, StringLiteralNode, UnaryExpressionNode, VariableDeclarationNode } from \"../const/types\";\n\n// -- Symbol Table for Scope Management --\nclass SymbolValue {\n\tconstructor(public name: string, public depth: number, public index: number) {}\n}\n\nclass SymbolTable {\n\tpublic store: Map<string, SymbolValue> = new Map();\n\tpublic parent?: SymbolTable;\n\tpublic localCount = 0;\n\n\tconstructor(parent?: SymbolTable) {\n\t\tthis.parent = parent;\n\t}\n\n\tdefine(name: string, depth: number): SymbolValue {\n\t\tconst symbol = new SymbolValue(name, depth, this.localCount++);\n\t\tthis.store.set(name, symbol);\n\t\treturn symbol;\n\t}\n\n\tresolve(name: string): { symbol: SymbolValue; isLocal: boolean } | null {\n\t\tconst symbol = this.store.get(name);\n\t\tif (symbol) {\n\t\t\treturn { symbol, isLocal: true };\n\t\t}\n\t\tif (this.parent) {\n\t\t\treturn this.parent.resolve(name);\n\t\t}\n\t\treturn null; // Assumed to be global\n\t}\n}\n\nexport class Compiler {\n\tprivate ast: StatementNode;\n\tprivate settings: SnowFallSettings;\n\n\t// Compilation context\n\tprivate compiledFunction: CompiledFunction;\n\tprivate parentCompiler: Compiler | null;\n\tprivate symbolTable: SymbolTable;\n\tprivate scopeDepth = 0;\n\n\tconstructor(ast: StatementNode, settings: SnowFallSettings, parent: Compiler | null = null) {\n\t\tthis.ast = ast;\n\t\tconsole.log(ast);\n\t\tthis.settings = settings;\n\t\tthis.parentCompiler = parent;\n\t\tthis.symbolTable = new SymbolTable(parent?.symbolTable);\n\t\tthis.scopeDepth = parent ? parent.scopeDepth + 1 : 0;\n\n\t\tconst funcName = ast.type === \"FunctionDeclaration\" ? (ast as FunctionDeclarationNode).name.name : \"main\";\n\t\tconst arity = ast.type === \"FunctionDeclaration\" ? (ast as FunctionDeclarationNode).params.length : 0;\n\n\t\tthis.compiledFunction = { name: funcName, arity, chunk: { code: [], constants: [] } };\n\n\t\t// For functions, define params in symbol table\n\t\tif (ast.type === \"FunctionDeclaration\") {\n\t\t\t(ast as FunctionDeclarationNode).params.forEach((p) => this.symbolTable.define(p.name, this.scopeDepth));\n\t\t}\n\t}\n\n\tprivate currentChunk() {\n\t\treturn this.compiledFunction.chunk;\n\t}\n\tprivate emit(byte: number) {\n\t\tthis.currentChunk().code.push(byte);\n\t}\n\tprivate emitBytes(...bytes: number[]) {\n\t\tbytes.forEach((b) => this.emit(b));\n\t}\n\n\tprivate addConstant(value: any): number {\n\t\tconst constants = this.currentChunk().constants;\n\t\t// Check if constant already exists\n\t\tconst existingIndex = constants.findIndex((c) => c === value);\n\t\tif (existingIndex !== -1) return existingIndex;\n\t\treturn constants.push(value) - 1;\n\t}\n\n\tprivate emitConstant(value: any) {\n\t\tthis.emitBytes(OpCode.PUSH_CONST, this.addConstant(value));\n\t}\n\n\tprivate emitJump(instruction: OpCode): number {\n\t\tthis.emit(instruction);\n\t\tthis.emit(0xff);\n\t\tthis.emit(0xff); // placeholder\n\t\treturn this.currentChunk().code.length - 2;\n\t}\n\tprivate patchJump(offset: number) {\n\t\tconst jump = this.currentChunk().code.length - offset - 2;\n\t\tif (jump > 0xffff) throw new Error(\"Compiler Error: Too much code to jump over.\");\n\t\tthis.currentChunk().code[offset] = (jump >> 8) & 0xff;\n\t\tthis.currentChunk().code[offset + 1] = jump & 0xff;\n\t}\n\tprivate emitLoop(loopStart: number) {\n\t\tthis.emit(OpCode.JUMP);\n\t\tconst offset = this.currentChunk().code.length - loopStart + 2;\n\t\tif (offset > 0xffff) throw new Error(\"Compiler Error: Loop body too large.\");\n\t\tthis.emit((offset >> 8) & 0xff);\n\t\tthis.emit(offset & 0xff);\n\t}\n\n\tprivate beginScope() {\n\t\tthis.scopeDepth++;\n\t}\n\tprivate endScope() {\n\t\tconst popCount = Array.from(this.symbolTable.store.values()).filter((s) => s.depth === this.scopeDepth).length;\n\t\tfor (let i = 0; i < popCount; i++) {\n\t\t\tthis.emit(OpCode.POP);\n\t\t}\n\t\tthis.scopeDepth--;\n\t}\n\n\t// --- Node Compilation ---\n\tprivate compileNode(node: AnyAstNode): void {\n\t\tswitch (node.type) {\n\t\t\tcase \"Program\":\n\t\t\t\tthis.compileStatements((node as ProgramNode).body);\n\t\t\t\tbreak;\n\t\t\tcase \"BlockStatement\":\n\t\t\t\tthis.compileStatements((node as BlockStatementNode).body);\n\t\t\t\tbreak;\n\t\t\tcase \"ExpressionStatement\":\n\t\t\t\tthis.compileExpressionStatement(node as ExpressionStatementNode);\n\t\t\t\tbreak;\n\t\t\tcase \"VariableDeclaration\":\n\t\t\t\tthis.compileVariableDeclaration(node as VariableDeclarationNode);\n\t\t\t\tbreak;\n\t\t\tcase \"Identifier\":\n\t\t\t\tthis.compileIdentifier(node as IdentifierNode);\n\t\t\t\tbreak;\n\t\t\tcase \"NumericLiteral\":\n\t\t\t\tthis.emitConstant((node as NumericLiteralNode).value);\n\t\t\t\tbreak;\n\t\t\tcase \"StringLiteral\":\n\t\t\t\tthis.emitConstant((node as StringLiteralNode).value);\n\t\t\t\tbreak;\n\t\t\tcase \"IfStatement\":\n\t\t\t\tthis.compileIfStatement(node as IfStatementNode);\n\t\t\t\tbreak;\n\t\t\tcase \"ForStatement\":\n\t\t\t\tthis.compileForStatement(node as ForStatementNode);\n\t\t\t\tbreak;\n\t\t\tcase \"FunctionDeclaration\":\n\t\t\t\tthis.compileFunctionDeclaration(node as FunctionDeclarationNode);\n\t\t\t\tbreak;\n\t\t\tcase \"ReturnStatement\":\n\t\t\t\tthis.compileReturnStatement(node as ReturnStatementNode);\n\t\t\t\tbreak;\n\t\t\tcase \"CallExpression\":\n\t\t\t\tthis.compileCallExpression(node as CallExpressionNode);\n\t\t\t\tbreak;\n\t\t\tcase \"UnaryExpression\":\n\t\t\t\tthis.compileUnaryExpression(node as UnaryExpressionNode);\n\t\t\t\tbreak;\n\t\t\tcase \"BinaryExpression\":\n\t\t\t\tthis.compileBinaryExpression(node as BinaryExpressionNode);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Compiler Error: Unknown AST node type: ${(node as any).type}`);\n\t\t}\n\t}\n\n\tprivate compileStatements(statements: StatementNode[]): void {\n\t\tstatements.forEach((stmt) => this.compileNode(stmt));\n\t}\n\n\tprivate compileExpressionStatement(node: ExpressionStatementNode): void {\n\t\tthis.compileNode(node.expression);\n\t\tthis.emit(OpCode.POP); // Pop the result of the expression\n\t}\n\n\tprivate compileVariableDeclaration(node: VariableDeclarationNode): void {\n\t\tif (node.init) {\n\t\t\tthis.compileNode(node.init);\n\t\t} else {\n\t\t\tthis.emit(OpCode.PUSH_NULL);\n\t\t}\n\t\tif (this.scopeDepth === 0) {\n\t\t\t// Global\n\t\t\tthis.emitBytes(OpCode.DEFINE_GLOBAL, this.addConstant(node.identifier.name));\n\t\t} else {\n\t\t\t// Local\n\t\t\tthis.symbolTable.define(node.identifier.name, this.scopeDepth);\n\t\t}\n\t}\n\n\tprivate compileIdentifier(node: IdentifierNode): void {\n\t\tif (this.settings.builtInFunctions[node.name]) {\n\t\t\t// It's a built-in function\n\t\t\treturn;\n\t\t}\n\n\t\tconst resolution = this.symbolTable.resolve(node.name);\n\t\tif (resolution) {\n\t\t\t// It's a local variable\n\t\t\tthis.emitBytes(OpCode.GET_LOCAL, resolution.symbol.index);\n\t\t} else {\n\t\t\t// Assume it's a global\n\t\t\tthis.emitBytes(OpCode.GET_GLOBAL, this.addConstant(node.name));\n\t\t}\n\t}\n\n\tprivate compileIfStatement(node: IfStatementNode): void {\n\t\tthis.compileNode(node.test);\n\t\tconst jumpIfFalse = this.emitJump(OpCode.JUMP_IF_FALSE);\n\n\t\tthis.compileNode(node.consequence);\n\n\t\tif (node.alternate) {\n\t\t\tconst jumpToEnd = this.emitJump(OpCode.JUMP);\n\t\t\tthis.patchJump(jumpIfFalse);\n\t\t\tthis.compileNode(node.alternate);\n\t\t\tthis.patchJump(jumpToEnd);\n\t\t} else {\n\t\t\tthis.patchJump(jumpIfFalse);\n\t\t}\n\t}\n\n\tprivate compileForStatement(node: ForStatementNode): void {\n\t\tthis.beginScope();\n\t\tif (node.init) this.compileNode(node.init);\n\n\t\tconst loopStart = this.currentChunk().code.length;\n\n\t\tlet exitJump = -1;\n\t\tif (node.test) {\n\t\t\tthis.compileNode(node.test);\n\t\t\texitJump = this.emitJump(OpCode.JUMP_IF_FALSE);\n\t\t}\n\n\t\tthis.compileNode(node.body);\n\n\t\tif (node.update) {\n\t\t\tthis.compileNode(node.update);\n\t\t\tthis.emit(OpCode.POP); // Pop update expression result\n\t\t}\n\n\t\tthis.emitLoop(loopStart);\n\n\t\tif (exitJump !== -1) {\n\t\t\tthis.patchJump(exitJump);\n\t\t\tthis.emit(OpCode.POP); // Pop the condition result\n\t\t}\n\t\tthis.endScope();\n\t}\n\n\tprivate compileFunctionDeclaration(node: FunctionDeclarationNode): void {\n\t\t// A placeholder for the function declaration AST node itself\n\t\tconst funcAST: any = { ...node, type: \"FunctionDeclaration\" };\n\n\t\tconst compiler = new Compiler(funcAST, this.settings, this);\n\t\tcompiler.compile(); // This compiles the function body\n\n\t\tconst funcConstantIndex = this.addConstant(compiler.compiledFunction);\n\t\tthis.emitBytes(OpCode.PUSH_CONST, funcConstantIndex);\n\n\t\tif (this.scopeDepth === 0) {\n\t\t\tthis.emitBytes(OpCode.DEFINE_GLOBAL, this.addConstant(node.name.name));\n\t\t} else {\n\t\t\tthis.symbolTable.define(node.name.name, this.scopeDepth);\n\t\t}\n\t}\n\n\tprivate compileReturnStatement(node: ReturnStatementNode): void {\n\t\tif (node.argument) {\n\t\t\tthis.compileNode(node.argument);\n\t\t} else {\n\t\t\tthis.emit(OpCode.PUSH_NULL);\n\t\t}\n\t\tthis.emit(OpCode.RETURN);\n\t}\n\n\tprivate compileCallExpression(node: CallExpressionNode): void {\n\t\tthis.compileNode(node.callee);\n\t\tfor (const arg of node.arguments) {\n\t\t\tthis.compileNode(arg);\n\t\t}\n\n\t\t// Check if it's a built-in function\n\t\tif (node.callee.type === \"Identifier\" && this.settings.builtInFunctions[(node.callee as IdentifierNode).name]) {\n\t\t\tconst funcNameIndex = this.addConstant((node.callee as IdentifierNode).name);\n\t\t\tthis.emitBytes(OpCode.CALL_BUILTIN, funcNameIndex, node.arguments.length);\n\t\t} else {\n\t\t\tthis.emitBytes(OpCode.CALL, node.arguments.length);\n\t\t}\n\t}\n\n\tprivate compileUnaryExpression(node: UnaryExpressionNode): void {\n\t\tthis.compileNode(node.right);\n\t\tswitch (node.operator) {\n\t\t\tcase \"!\":\n\t\t\t\tthis.emit(OpCode.NEGATE);\n\t\t\t\tbreak;\n\t\t\tcase \"-\":\n\t\t\t\tthis.emit(OpCode.NEGATE);\n\t\t\t\tthis.emit(OpCode.SUBTRACT);\n\t\t\t\tbreak; // Conceptual: 0 - X\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Compiler Error: Unknown unary operator ${node.operator}`);\n\t\t}\n\t}\n\n\tprivate compileBinaryExpression(node: BinaryExpressionNode): void {\n\t\tthis.compileNode(node.left);\n\t\tthis.compileNode(node.right);\n\t\tswitch (node.operator) {\n\t\t\tcase \"+\":\n\t\t\t\tthis.emit(OpCode.ADD);\n\t\t\t\tbreak;\n\t\t\tcase \"-\":\n\t\t\t\tthis.emit(OpCode.SUBTRACT);\n\t\t\t\tbreak;\n\t\t\tcase \"*\":\n\t\t\t\tthis.emit(OpCode.MULTIPLY);\n\t\t\t\tbreak;\n\t\t\tcase \"/\":\n\t\t\t\tthis.emit(OpCode.DIVIDE);\n\t\t\t\tbreak;\n\t\t\tcase \"==\":\n\t\t\t\tthis.emit(OpCode.EQUAL);\n\t\t\t\tbreak;\n\t\t\tcase \"!=\":\n\t\t\t\tthis.emit(OpCode.NOT_EQUAL);\n\t\t\t\tbreak;\n\t\t\tcase \"<\":\n\t\t\t\tthis.emit(OpCode.LESS_THAN);\n\t\t\t\tbreak;\n\t\t\tcase \"<=\":\n\t\t\t\tthis.emit(OpCode.LESS_EQUAL);\n\t\t\t\tbreak;\n\t\t\tcase \">\":\n\t\t\t\tthis.emit(OpCode.GREATER_THAN);\n\t\t\t\tbreak;\n\t\t\tcase \">=\":\n\t\t\t\tthis.emit(OpCode.GREATER_EQUAL);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Compiler Error: Unknown binary operator ${node.operator}`);\n\t\t}\n\t}\n\n\t// --- Public API ---\n\tpublic compile(): CompiledFunction {\n\t\tif (this.ast.type === \"Program\") {\n\t\t\tthis.compileNode(this.ast);\n\t\t\tthis.emit(OpCode.PUSH_NULL);\n\t\t\tthis.emit(OpCode.RETURN);\n\t\t} else if (this.ast.type === \"FunctionDeclaration\") {\n\t\t\tthis.compileNode((this.ast as FunctionDeclarationNode).body);\n\t\t\t// Implicit return at the end of a function\n\t\t\tthis.emit(OpCode.PUSH_NULL);\n\t\t\tthis.emit(OpCode.RETURN);\n\t\t}\n\t\treturn this.compiledFunction;\n\t}\n}\n",
    "import { Token, TokenType } from \"../../const/types\";\n\nexport class Lexer {\n\tprivate source: string;\n\tprivate pos = 0;\n\tprivate currentChar: string | null;\n\n\tprivate keywords: { [key: string]: TokenType } = {\n\t\tlet: \"KEYWORD\",\n\t\tif: \"KEYWORD\",\n\t\telse: \"KEYWORD\",\n\t\tfor: \"KEYWORD\",\n\t\tfunction: \"KEYWORD\",\n\t\treturn: \"KEYWORD\",\n\t};\n\n\tconstructor(source: string) {\n\t\tthis.source = source;\n\t\tthis.currentChar = this.source[this.pos];\n\t}\n\n\tprivate advance() {\n\t\tthis.pos++;\n\t\tthis.currentChar = this.pos < this.source.length ? this.source[this.pos] : null;\n\t}\n\n\tprivate peek(): string | null {\n\t\treturn this.pos + 1 < this.source.length ? this.source[this.pos + 1] : null;\n\t}\n\n\tprivate string(): Token {\n\t\tthis.advance(); // consume opening \"\n\t\tlet result = \"\";\n\t\twhile (this.currentChar !== '\"' && this.currentChar !== null) {\n\t\t\tresult += this.currentChar;\n\t\t\tthis.advance();\n\t\t}\n\t\tif (this.currentChar === null) {\n\t\t\tthrow new Error(\"Lexer Error: Unterminated string.\");\n\t\t}\n\t\tthis.advance(); // consume closing \"\n\t\treturn { type: \"STRING\", value: result };\n\t}\n\n\t// (number, skipWhitespace は変更なし)\n\tprivate number(): Token {\n\t\tlet result = \"\";\n\t\twhile (this.currentChar !== null && /\\d/.test(this.currentChar)) {\n\t\t\tresult += this.currentChar;\n\t\t\tthis.advance();\n\t\t}\n\t\treturn { type: \"NUMBER\", value: result };\n\t}\n\n\tprivate skipWhitespace() {\n\t\twhile (this.currentChar !== null && /\\s/.test(this.currentChar)) {\n\t\t\tthis.advance();\n\t\t}\n\t}\n\n\tprivate identifier(): Token {\n\t\tlet result = \"\";\n\t\twhile (this.currentChar !== null && /[a-zA-Z_0-9]/.test(this.currentChar)) {\n\t\t\tresult += this.currentChar;\n\t\t\tthis.advance();\n\t\t}\n\t\tconst type = this.keywords[result] || \"IDENTIFIER\";\n\t\treturn { type, value: result };\n\t}\n\n\tpublic tokenize(): Token[] {\n\t\tconst tokens: Token[] = [];\n\t\twhile (this.currentChar !== null) {\n\t\t\tif (/\\s/.test(this.currentChar)) {\n\t\t\t\tthis.skipWhitespace();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this.currentChar === '\"') {\n\t\t\t\ttokens.push(this.string());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (/\\d/.test(this.currentChar)) {\n\t\t\t\ttokens.push(this.number());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (/[a-zA-Z_]/.test(this.currentChar)) {\n\t\t\t\ttokens.push(this.identifier());\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// 演算子\n\t\t\tswitch (this.currentChar) {\n\t\t\t\tcase \"=\":\n\t\t\t\t\ttokens.push(this.peek() === \"=\" ? (this.advance(), { type: \"EQUAL_EQUAL\", value: \"==\" }) : { type: \"EQUALS\", value: \"=\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"!\":\n\t\t\t\t\ttokens.push(this.peek() === \"=\" ? (this.advance(), { type: \"BANG_EQUAL\", value: \"!=\" }) : { type: \"BANG\", value: \"!\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \">\":\n\t\t\t\t\ttokens.push(this.peek() === \"=\" ? (this.advance(), { type: \"GREATER_EQUAL\", value: \">=\" }) : { type: \"GREATER\", value: \">\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"<\":\n\t\t\t\t\ttokens.push(this.peek() === \"=\" ? (this.advance(), { type: \"LESS_EQUAL\", value: \"<=\" }) : { type: \"LESS\", value: \"<\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"+\":\n\t\t\t\t\ttokens.push({ type: \"PLUS\", value: \"+\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"-\":\n\t\t\t\t\ttokens.push({ type: \"MINUS\", value: \"-\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"*\":\n\t\t\t\t\ttokens.push({ type: \"STAR\", value: \"*\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"/\":\n\t\t\t\t\ttokens.push({ type: \"SLASH\", value: \"/\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"(\":\n\t\t\t\t\ttokens.push({ type: \"LPAREN\", value: \"(\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \")\":\n\t\t\t\t\ttokens.push({ type: \"RPAREN\", value: \")\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"{\":\n\t\t\t\t\ttokens.push({ type: \"LBRACE\", value: \"{\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"}\":\n\t\t\t\t\ttokens.push({ type: \"RBRACE\", value: \"}\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \";\":\n\t\t\t\t\ttokens.push({ type: \"SEMICOLON\", value: \";\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \":\":\n\t\t\t\t\ttokens.push({ type: \"COLON\", value: \":\" });\n\t\t\t\t\tbreak;\n\t\t\t\tcase \",\":\n\t\t\t\t\ttokens.push({ type: \"COMMA\", value: \",\" });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Lexer Error: Unknown character: ${this.currentChar}`);\n\t\t\t}\n\t\t\tthis.advance();\n\t\t}\n\t\ttokens.push({ type: \"EOF\", value: \"\" });\n\t\treturn tokens;\n\t}\n}\n",
    "import { BinaryExpressionNode, BlockStatementNode, CallExpressionNode, ExpressionNode, ExpressionStatementNode, ForStatementNode, FunctionDeclarationNode, IdentifierNode, IfStatementNode, NumericLiteralNode, ProgramNode, ReturnStatementNode, StatementNode, StringLiteralNode, Token, TokenType, UnaryExpressionNode, VariableDeclarationNode } from \"../../const/types\";\n\n// 演算子の優先順位\nenum Precedence {\n\tLOWEST,\n\tEQUALS, // ==\n\tLESS_GREATER, // > or <\n\tSUM, // +\n\tPRODUCT, // *\n\tPREFIX, // -X or !X\n\tCALL, // myFunction(X)\n\tINDEX, // array[index]\n}\n\nconst precedences: { [key in TokenType]?: Precedence } = {\n\tEQUAL_EQUAL: Precedence.EQUALS,\n\tBANG_EQUAL: Precedence.EQUALS,\n\tGREATER: Precedence.LESS_GREATER,\n\tGREATER_EQUAL: Precedence.LESS_GREATER,\n\tLESS: Precedence.LESS_GREATER,\n\tLESS_EQUAL: Precedence.LESS_GREATER,\n\tPLUS: Precedence.SUM,\n\tMINUS: Precedence.SUM,\n\tSLASH: Precedence.PRODUCT,\n\tSTAR: Precedence.PRODUCT,\n\tLPAREN: Precedence.CALL,\n};\n\ntype PrefixParseFn = () => ExpressionNode;\ntype InfixParseFn = (expression: ExpressionNode) => ExpressionNode;\n\nexport class Parser {\n\tprivate tokens: Token[];\n\tprivate pos = 0;\n\n\tprivate currentToken: Token;\n\tprivate peekToken: Token;\n\n\tprivate prefixParseFns: Map<TokenType, PrefixParseFn>;\n\tprivate infixParseFns: Map<TokenType, InfixParseFn>;\n\n\tconstructor(tokens: Token[]) {\n\t\tthis.tokens = tokens;\n\t\tthis.currentToken = this.tokens[0];\n\t\tthis.peekToken = this.tokens[1];\n\n\t\tthis.prefixParseFns = new Map();\n\t\tthis.registerPrefix(\"IDENTIFIER\", this.parseIdentifier);\n\t\tthis.registerPrefix(\"NUMBER\", this.parseNumericLiteral);\n\t\tthis.registerPrefix(\"STRING\", this.parseStringLiteral);\n\t\tthis.registerPrefix(\"BANG\", this.parsePrefixExpression);\n\t\tthis.registerPrefix(\"MINUS\", this.parsePrefixExpression);\n\t\tthis.registerPrefix(\"LPAREN\", this.parseGroupedExpression);\n\n\t\tthis.infixParseFns = new Map();\n\t\tthis.registerInfix(\"PLUS\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"MINUS\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"SLASH\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"STAR\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"EQUAL_EQUAL\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"BANG_EQUAL\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"GREATER\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"GREATER_EQUAL\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"LESS\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"LESS_EQUAL\", this.parseInfixExpression);\n\t\tthis.registerInfix(\"LPAREN\", this.parseCallExpression);\n\t}\n\n\tprivate advance() {\n\t\tthis.pos++;\n\t\tthis.currentToken = this.peekToken;\n\t\tthis.peekToken = this.pos + 1 < this.tokens.length ? this.tokens[this.pos + 1] : { type: \"EOF\", value: \"\" };\n\t}\n\n\tprivate registerPrefix(tokenType: TokenType, fn: PrefixParseFn) {\n\t\tthis.prefixParseFns.set(tokenType, fn.bind(this));\n\t}\n\n\tprivate registerInfix(tokenType: TokenType, fn: InfixParseFn) {\n\t\tthis.infixParseFns.set(tokenType, fn.bind(this));\n\t}\n\n\tprivate expectPeek(type: TokenType): void {\n\t\tif (this.peekToken.type === type) {\n\t\t\tthis.advance();\n\t\t} else {\n\t\t\tthrow new Error(`Parser Error: Expected next token to be ${type}, got ${this.peekToken.type} instead.`);\n\t\t}\n\t}\n\n\tprivate peekPrecedence(): Precedence {\n\t\treturn precedences[this.peekToken.type] || Precedence.LOWEST;\n\t}\n\n\tprivate currentPrecedence(): Precedence {\n\t\treturn precedences[this.currentToken.type] || Precedence.LOWEST;\n\t}\n\n\t// --- Expression Parsing ---\n\tprivate parseExpression(precedence: Precedence): ExpressionNode {\n\t\tconst prefix = this.prefixParseFns.get(this.currentToken.type);\n\t\tif (!prefix) {\n\t\t\tthrow new Error(`Parser Error: No prefix parse function for ${this.currentToken.type} found.`);\n\t\t}\n\t\tlet leftExp = prefix();\n\n\t\twhile (this.peekToken.type !== \"SEMICOLON\" && precedence < this.peekPrecedence()) {\n\t\t\tconst infix = this.infixParseFns.get(this.peekToken.type);\n\t\t\tif (!infix) {\n\t\t\t\treturn leftExp;\n\t\t\t}\n\t\t\tthis.advance();\n\t\t\tleftExp = infix(leftExp);\n\t\t}\n\t\treturn leftExp;\n\t}\n\n\tprivate parseIdentifier = (): IdentifierNode => {\n\t\treturn { type: \"Identifier\", name: this.currentToken.value };\n\t};\n\n\tprivate parseNumericLiteral = (): NumericLiteralNode => {\n\t\treturn { type: \"NumericLiteral\", value: parseFloat(this.currentToken.value) };\n\t};\n\n\tprivate parseStringLiteral = (): StringLiteralNode => {\n\t\treturn { type: \"StringLiteral\", value: this.currentToken.value };\n\t};\n\n\tprivate parsePrefixExpression = (): UnaryExpressionNode => {\n\t\tconst operator = this.currentToken.value;\n\t\tthis.advance();\n\t\tconst right = this.parseExpression(Precedence.PREFIX);\n\t\treturn { type: \"UnaryExpression\", operator, right };\n\t};\n\n\tprivate parseInfixExpression = (left: ExpressionNode): BinaryExpressionNode => {\n\t\tconst operator = this.currentToken.value;\n\t\tconst precedence = this.currentPrecedence();\n\t\tthis.advance();\n\t\tconst right = this.parseExpression(precedence);\n\t\treturn { type: \"BinaryExpression\", left, operator, right };\n\t};\n\n\tprivate parseGroupedExpression = (): ExpressionNode => {\n\t\tthis.advance(); // consume '('\n\t\tconst exp = this.parseExpression(Precedence.LOWEST);\n\t\tthis.expectPeek(\"RPAREN\");\n\t\treturn exp;\n\t};\n\n\tprivate parseCallExpression = (func: ExpressionNode): CallExpressionNode => {\n\t\tconst args = this.parseExpressionList(\"RPAREN\");\n\t\treturn { type: \"CallExpression\", callee: func, arguments: args };\n\t};\n\n\tprivate parseExpressionList(endToken: TokenType): ExpressionNode[] {\n\t\tconst list: ExpressionNode[] = [];\n\t\tif (this.peekToken.type === endToken) {\n\t\t\tthis.advance();\n\t\t\treturn list;\n\t\t}\n\t\tthis.advance();\n\t\tlist.push(this.parseExpression(Precedence.LOWEST));\n\t\twhile (this.peekToken.type === \"COMMA\") {\n\t\t\tthis.advance();\n\t\t\tthis.advance();\n\t\t\tlist.push(this.parseExpression(Precedence.LOWEST));\n\t\t}\n\t\tthis.expectPeek(endToken);\n\t\treturn list;\n\t}\n\n\t// --- Statement Parsing ---\n\tprivate parseStatement(): StatementNode | null {\n\t\tswitch (this.currentToken.type) {\n\t\t\tcase \"KEYWORD\":\n\t\t\t\tswitch (this.currentToken.value) {\n\t\t\t\t\tcase \"let\":\n\t\t\t\t\t\treturn this.parseVariableDeclaration();\n\t\t\t\t\tcase \"return\":\n\t\t\t\t\t\treturn this.parseReturnStatement();\n\t\t\t\t\tcase \"if\":\n\t\t\t\t\t\treturn this.parseIfStatement();\n\t\t\t\t\tcase \"for\":\n\t\t\t\t\t\treturn this.parseForStatement();\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\treturn this.parseFunctionDeclaration();\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn this.parseExpressionStatement();\n\t\t}\n\t}\n\n\tprivate parseBlockStatement = (): BlockStatementNode => {\n\t\tconst body: StatementNode[] = [];\n\t\tthis.advance(); // consume '{'\n\t\twhile (this.currentToken.type !== \"RBRACE\" && this.currentToken.type !== \"EOF\") {\n\t\t\tconst stmt = this.parseStatement();\n\t\t\tif (stmt) {\n\t\t\t\tbody.push(stmt);\n\t\t\t}\n\t\t\tthis.advance();\n\t\t}\n\t\treturn { type: \"BlockStatement\", body };\n\t};\n\n\tprivate parseVariableDeclaration = (): VariableDeclarationNode => {\n\t\tthis.expectPeek(\"IDENTIFIER\"); // consume 'let'\n\t\tconst identifier: IdentifierNode = { type: \"Identifier\", name: this.currentToken.value };\n\t\t//this.advance();\n\n\t\tlet typeAnnotation: IdentifierNode | undefined;\n\t\tif (this.peekToken.type === \"COLON\") {\n\t\t\tthis.advance(); // consume ':'\n\t\t\tthis.advance(); // at type name\n\t\t\ttypeAnnotation = this.parseIdentifier();\n\t\t}\n\t\tconst { type } = this.peekToken;\n\t\tif (type !== \"EQUALS\") {\n\t\t\treturn { type: \"VariableDeclaration\", identifier, typeAnnotation };\n\t\t}\n\n\t\tthis.expectPeek(\"EQUALS\");\n\t\tthis.advance();\n\n\t\tconst init = this.parseExpression(Precedence.LOWEST);\n\n\t\tif (this.peekToken.type === \"SEMICOLON\") {\n\t\t\tthis.advance();\n\t\t}\n\t\treturn { type: \"VariableDeclaration\", identifier, typeAnnotation, init };\n\t};\n\n\tprivate parseReturnStatement = (): ReturnStatementNode => {\n\t\tthis.advance(); // consume 'return'\n\t\tif (this.currentToken.type === \"SEMICOLON\") {\n\t\t\treturn { type: \"ReturnStatement\" };\n\t\t}\n\t\tconst argument = this.parseExpression(Precedence.LOWEST);\n\t\tif (this.peekToken.type === \"SEMICOLON\") {\n\t\t\tthis.advance();\n\t\t}\n\t\treturn { type: \"ReturnStatement\", argument };\n\t};\n\n\tprivate parseIfStatement = (): IfStatementNode => {\n\t\tthis.expectPeek(\"LPAREN\"); // consume 'if'\n\t\t//this.advance();\n\t\tconst test = this.parseGroupedExpression();\n\n\t\tthis.expectPeek(\"LBRACE\");\n\t\tconst consequence = this.parseBlockStatement();\n\n\t\tlet alternate: StatementNode | undefined;\n\t\tconst { type, value } = this.peekToken;\n\t\tif (type === \"KEYWORD\" && value === \"else\") {\n\t\t\tthis.advance(); // consume 'else'\n\t\t\tif (this.peekToken.type === \"KEYWORD\" && this.peekToken.value === \"if\") {\n\t\t\t\t// else if\n\t\t\t\tthis.advance();\n\t\t\t\talternate = this.parseIfStatement();\n\t\t\t} else {\n\t\t\t\tthis.expectPeek(\"LBRACE\");\n\t\t\t\talternate = this.parseBlockStatement();\n\t\t\t}\n\t\t}\n\t\treturn { type: \"IfStatement\", test, consequence, alternate };\n\t};\n\n\tprivate parseForStatement = (): ForStatementNode => {\n\t\tthis.expectPeek(\"LPAREN\"); // consume 'for'\n\t\tthis.advance(); // at start of init\n\n\t\tlet init: StatementNode | ExpressionNode | undefined;\n\t\tif (this.currentToken.type !== \"SEMICOLON\") {\n\t\t\tif (this.currentToken.type === \"KEYWORD\" && this.currentToken.value === \"let\") {\n\t\t\t\tinit = this.parseVariableDeclaration();\n\t\t\t} else {\n\t\t\t\tinit = this.parseExpression(Precedence.LOWEST);\n\t\t\t}\n\t\t}\n\t\tthis.expectPeek(\"SEMICOLON\");\n\t\tthis.advance();\n\n\t\tlet test: ExpressionNode | undefined;\n\t\tif (this.currentToken.type !== \"SEMICOLON\") {\n\t\t\ttest = this.parseExpression(Precedence.LOWEST);\n\t\t}\n\t\tthis.expectPeek(\"SEMICOLON\");\n\t\tthis.advance();\n\n\t\tlet update: ExpressionNode | undefined;\n\t\tif (this.currentToken.type !== \"RPAREN\") {\n\t\t\tupdate = this.parseExpression(Precedence.LOWEST);\n\t\t}\n\t\tthis.expectPeek(\"RPAREN\");\n\n\t\tthis.expectPeek(\"LBRACE\");\n\t\tconst body = this.parseBlockStatement();\n\n\t\treturn { type: \"ForStatement\", init, test, update, body };\n\t};\n\n\tprivate parseFunctionDeclaration = (): FunctionDeclarationNode => {\n\t\tthis.advance(); // consume 'function'\n\t\tconst name = this.parseIdentifier();\n\t\tthis.expectPeek(\"LPAREN\");\n\n\t\t// Parse parameters\n\t\tconst params: IdentifierNode[] = [];\n\t\tif (this.peekToken.type !== \"RPAREN\") {\n\t\t\tthis.advance();\n\t\t\tdo {\n\t\t\t\tthis.advance();\n\t\t\t\tparams.push(this.parseIdentifier());\n\t\t\t} while (this.peekToken.type === \"COMMA\");\n\t\t}\n\t\tthis.expectPeek(\"RPAREN\");\n\n\t\tthis.expectPeek(\"LBRACE\");\n\t\tconst body = this.parseBlockStatement();\n\n\t\treturn { type: \"FunctionDeclaration\", name, params, body };\n\t};\n\n\tprivate parseExpressionStatement = (): ExpressionStatementNode => {\n\t\tconst expression = this.parseExpression(Precedence.LOWEST);\n\t\tif (this.peekToken.type === \"SEMICOLON\") {\n\t\t\tthis.advance();\n\t\t}\n\t\treturn { type: \"ExpressionStatement\", expression };\n\t};\n\n\tpublic parse(): ProgramNode {\n\t\tconst program: ProgramNode = { type: \"Program\", body: [] };\n\t\tconsole.log(this.tokens);\n\t\twhile (this.currentToken.type !== \"EOF\") {\n\t\t\tconst stmt = this.parseStatement();\n\t\t\tif (stmt) {\n\t\t\t\tprogram.body.push(stmt);\n\t\t\t}\n\t\t\tthis.advance();\n\t\t}\n\t\treturn program;\n\t}\n}\n",
    "export enum OpCode {\n\t// 定数と変数\n\tPUSH_CONST,\n\tPUSH_NULL,\n\n\t// 算術演算\n\tADD,\n\tSUBTRACT,\n\tMULTIPLY,\n\tDIVIDE,\n\n\t// 比較演算\n\tEQUAL,\n\tNOT_EQUAL,\n\tGREATER_THAN,\n\tGREATER_EQUAL,\n\tLESS_THAN,\n\tLESS_EQUAL,\n\n\t// 論理演算\n\tNEGATE, // ! (not)\n\n\t// 文と式\n\tPOP, // 式文の結果を捨てる\n\n\t// 変数操作\n\tDEFINE_GLOBAL,\n\tGET_GLOBAL,\n\tSET_GLOBAL,\n\tGET_LOCAL,\n\tSET_LOCAL,\n\n\t// 制御フロー\n\tJUMP,\n\tJUMP_IF_FALSE,\n\n\t// 関数\n\tCALL,\n\tRETURN,\n\n\t// 外部連携\n\tCALL_BUILTIN,\n}\n",
    "import { SnowFall } from \"./main\";\n\nif (typeof window !== \"undefined\") {\n\t(window as any).SnowFall = SnowFall;\n}\n\nexport default SnowFall;\n",
    "import { Compiler } from \"./compiler/compiler\";\r\nimport { Lexer } from \"./compiler/libs/lexer\";\r\nimport { Parser } from \"./compiler/libs/parser\";\r\nimport { CompiledOutput, SnowFallSettings } from \"./const/types\";\r\nimport { SnowFallVM } from \"./vm/vm\";\r\n\r\n// デフォルトの設定\r\nconst defaultSettings: SnowFallSettings = {\r\n\tbuiltInFunctions: {\r\n\t\t// デフォルトでは何もない\r\n\t},\r\n};\r\n\r\n/**\r\n * SnowFallソースコードをコンパイルします。\r\n * @param source ソースコード文字列\r\n * @param settings カスタム設定\r\n * @returns コンパイル済みオブジェクト\r\n */\r\nfunction compile(source: string, settings: SnowFallSettings = defaultSettings): CompiledOutput {\r\n\tconst lexer = new Lexer(source);\r\n\tconst tokens = lexer.tokenize();\r\n\r\n\tconst parser = new Parser(tokens);\r\n\tconst ast = parser.parse();\r\n\r\n\tconst compiler = new Compiler(ast, settings);\r\n\treturn compiler.compile();\r\n}\r\n\r\n/**\r\n * コンパイル済みオブジェクトを実行します。\r\n * @param compiled コンパイル済みオブジェクト\r\n * @param settings カスタム設定\r\n * @returns 最後の式の評価結果\r\n */\r\nfunction run(compiled: CompiledOutput, settings: SnowFallSettings = defaultSettings): any {\r\n\tconst vm = new SnowFallVM(compiled, settings);\r\n\treturn vm.run();\r\n}\r\n\r\n/**\r\n * SnowFallソースコードをコンパイルして実行します。\r\n * @param source ソースコード文字列\r\n * @param settings カスタム設定\r\n * @returns 最後の式の評価結果\r\n */\r\nfunction compileAndRun(source: string, settings: SnowFallSettings = defaultSettings): any {\r\n\tconst compiled = compile(source, settings);\r\n\treturn run(compiled, settings);\r\n}\r\n\r\n// ライブラリとして公開するAPI\r\nexport const SnowFall = {\r\n\tcompile,\r\n\trun,\r\n\tcompileAndRun,\r\n};\r\n",
    "import { OpCode } from \"../const/opcodes\";\nimport { CompiledFunction, SnowFallSettings } from \"../const/types\";\n\ninterface CallFrame {\n\tfunc: CompiledFunction;\n\tip: number;\n\tstackStart: number;\n}\n\nexport class SnowFallVM {\n\tprivate settings: SnowFallSettings;\n\n\tprivate frames: CallFrame[] = [];\n\tprivate frame: CallFrame;\n\tprivate stack: any[] = [];\n\tprivate globals: Map<string, any> = new Map();\n\n\tconstructor(entryFunction: CompiledFunction, settings: SnowFallSettings) {\n\t\tthis.settings = settings;\n\t\tconsole.log(entryFunction);\n\n\t\t// Initial setup\n\t\tthis.stack.push(entryFunction); // Push function to stack for the first call\n\t\tconst frame = { func: entryFunction, ip: 0, stackStart: 0 };\n\t\tthis.frames.push(frame);\n\t\tthis.frame = frame;\n\t}\n\n\tprivate readByte(): number {\n\t\treturn this.frame.func.chunk.code[this.frame.ip++];\n\t}\n\tprivate readShort(): number {\n\t\tthis.frame.ip += 2;\n\t\tconst code = this.frame.func.chunk.code;\n\t\treturn (code[this.frame.ip - 2] << 8) | code[this.frame.ip - 1];\n\t}\n\n\tprivate readConstant(): any {\n\t\treturn this.frame.func.chunk.constants[this.readByte()];\n\t}\n\n\tpublic run(): any {\n\t\twhile (true) {\n\t\t\tconst op = this.readByte();\n\t\t\tswitch (op) {\n\t\t\t\tcase OpCode.PUSH_CONST:\n\t\t\t\t\tthis.stack.push(this.readConstant());\n\t\t\t\t\tbreak;\n\t\t\t\tcase OpCode.PUSH_NULL:\n\t\t\t\t\tthis.stack.push(null);\n\t\t\t\t\tbreak;\n\t\t\t\tcase OpCode.POP:\n\t\t\t\t\tthis.stack.pop();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase OpCode.DEFINE_GLOBAL: {\n\t\t\t\t\tconst name = this.readConstant();\n\t\t\t\t\tthis.globals.set(name, this.stack[this.stack.length - 1]);\n\t\t\t\t\tthis.stack.pop();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.GET_GLOBAL: {\n\t\t\t\t\tconst name = this.readConstant();\n\t\t\t\t\tif (!this.globals.has(name)) throw new Error(`VM Error: Undefined global variable '${name}'.`);\n\t\t\t\t\tthis.stack.push(this.globals.get(name));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.SET_GLOBAL: {\n\t\t\t\t\tconst name = this.readConstant();\n\t\t\t\t\tif (!this.globals.has(name)) throw new Error(`VM Error: Undefined global variable '${name}'.`);\n\t\t\t\t\tthis.globals.set(name, this.stack[this.stack.length - 1]);\n\t\t\t\t\t// Note: set does not pop the value from the stack, allowing `a = b = 1`\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase OpCode.GET_LOCAL: {\n\t\t\t\t\tconst slot = this.readByte();\n\t\t\t\t\tthis.stack.push(this.stack[this.frame.stackStart + slot]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.SET_LOCAL: {\n\t\t\t\t\tconst slot = this.readByte();\n\t\t\t\t\tthis.stack[this.frame.stackStart + slot] = this.stack[this.stack.length - 1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase OpCode.EQUAL: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tthis.stack.push(a === b);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.NOT_EQUAL: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tthis.stack.push(a !== b);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.GREATER_THAN: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tthis.stack.push(a > b);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.GREATER_EQUAL: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tthis.stack.push(a >= b);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.LESS_THAN: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tthis.stack.push(a < b);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.LESS_EQUAL: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tthis.stack.push(a <= b);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase OpCode.ADD: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tif (typeof a === \"number\" && typeof b === \"number\") this.stack.push(a + b);\n\t\t\t\t\telse if (typeof a === \"string\" || typeof b === \"string\") this.stack.push(String(a) + String(b));\n\t\t\t\t\telse throw new Error(\"VM Error: Operands must be two numbers or at least one string.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.SUBTRACT: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tif (typeof a === \"number\" && typeof b === \"number\") this.stack.push(a - b);\n\t\t\t\t\telse throw new Error(\"VM Error: Operands must be two numbers.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.MULTIPLY: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tif (typeof a === \"number\" && typeof b === \"number\") this.stack.push(a * b);\n\t\t\t\t\telse if (typeof a === \"string\" && typeof b === \"number\") this.stack.push(a.repeat(b));\n\t\t\t\t\telse if (typeof a === \"number\" && typeof b === \"string\") this.stack.push(b.repeat(a));\n\t\t\t\t\telse throw new Error(\"VM Error: Operands must be two numbers. Or one string and one number.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.DIVIDE: {\n\t\t\t\t\tconst b = this.stack.pop();\n\t\t\t\t\tconst a = this.stack.pop();\n\t\t\t\t\tif (typeof a === \"number\" && typeof b === \"number\") this.stack.push(a / b);\n\t\t\t\t\telse throw new Error(\"VM Error: Operands must be two numbers.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase OpCode.NEGATE:\n\t\t\t\t\tthis.stack.push(!this.stack.pop());\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase OpCode.JUMP: {\n\t\t\t\t\tconst offset = this.readShort();\n\t\t\t\t\tif (this.settings.hooks?.beforeJump) this.settings.hooks.beforeJump(this, \"JUMP\");\n\t\t\t\t\tthis.frame.ip += offset;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase OpCode.JUMP_IF_FALSE: {\n\t\t\t\t\tconst offset = this.readShort();\n\t\t\t\t\tif (this.settings.hooks?.beforeJump) this.settings.hooks.beforeJump(this, \"JUMP_IF_FALSE\");\n\t\t\t\t\tif (!this.stack[this.stack.length - 1]) {\n\t\t\t\t\t\t// peek\n\t\t\t\t\t\tthis.frame.ip += offset;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase OpCode.CALL: {\n\t\t\t\t\tconst argCount = this.readByte();\n\t\t\t\t\tconst callee = this.stack[this.stack.length - 1 - argCount];\n\t\t\t\t\tif (!(callee && typeof callee === \"object\" && callee.arity !== undefined)) {\n\t\t\t\t\t\tthrow new Error(\"VM Error: Can only call functions.\");\n\t\t\t\t\t}\n\t\t\t\t\tif (argCount !== callee.arity) {\n\t\t\t\t\t\tthrow new Error(`VM Error: Expected ${callee.arity} arguments but got ${argCount}.`);\n\t\t\t\t\t}\n\t\t\t\t\tconst newFrame = { func: callee, ip: 0, stackStart: this.stack.length - argCount };\n\t\t\t\t\tthis.frames.push(newFrame);\n\t\t\t\t\tthis.frame = newFrame;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase OpCode.RETURN: {\n\t\t\t\t\tconst result = this.stack.pop();\n\t\t\t\t\tthis.frames.pop();\n\t\t\t\t\tif (this.frames.length === 0) {\n\t\t\t\t\t\treturn result; // End of script\n\t\t\t\t\t}\n\t\t\t\t\tthis.stack.splice(this.frame.stackStart); // Discard frame's stack\n\t\t\t\t\tthis.stack.push(result);\n\t\t\t\t\tthis.frame = this.frames[this.frames.length - 1];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tcase OpCode.CALL_BUILTIN: {\n\t\t\t\t\tconst funcName = this.readConstant();\n\t\t\t\t\tconst argCount = this.readByte();\n\t\t\t\t\tconst args = this.stack.splice(this.stack.length - argCount, argCount);\n\n\t\t\t\t\tconst func = this.settings.builtInFunctions[funcName];\n\t\t\t\t\tif (func) {\n\t\t\t\t\t\tconst result = func(...args);\n\t\t\t\t\t\tthis.stack.push(result === undefined ? null : result); // Always push something\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(`VM Error: Built-in function ${funcName} not found.`);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`VM Error: Unknown opcode ${op}`);\n\t\t\t}\n\t\t}\n\t}\n}\n"
  ]
}