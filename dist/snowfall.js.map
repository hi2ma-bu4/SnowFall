{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.ts",
    "src/lib/lexer.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import { Lexer } from \"./lib/lexer\";\n\nconst input = `\nx = 5;\ny = 10;\napple = 1;\na = x; // とりあえず、xの値を代入\nb = x+2;\n\n/*\n    データだよ()\n*/\n\nhoge = \"fuga\";\n\n`;\n\nconst lexer = new Lexer(input);\nconst tokens = lexer.tokenize();\n\nconsole.log(tokens);\n",
    "type Token = {\n\ttype: string;\n\tvalue: string;\n};\n\nclass LexerError extends Error {}\n\nclass Lexer {\n\tprivate input: string;\n\tprivate input_length: number;\n\tprivate position: number = 0;\n\tprivate row_counter: number = 0;\n\tprivate oldPosition: number = -1;\n\tprivate currentChar: string | null = null;\n\tprivate funcList = [\n\t\t// 実行関数\n\t\tthis.newline.bind(this),\n\t\tthis.string.bind(this),\n\t\tthis.identifier.bind(this),\n\t\tthis.number.bind(this),\n\t\tthis.operator.bind(this),\n\t\tthis.semicolon.bind(this),\n\t];\n\n\tconstructor(input: string) {\n\t\tthis.input = input;\n\t\tthis.input_length = input.length;\n\t\tthis.advance(); // 初期化\n\t}\n\n\tprivate getCurrentChar(diff: number | null = null): string | null {\n\t\tif (diff) {\n\t\t\tdiff--;\n\t\t\tif (this.position + diff >= this.input_length) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn this.input[this.position + diff];\n\t\t}\n\t\treturn this.currentChar;\n\t}\n\n\tprivate advance(): void {\n\t\tif (this.position < this.input_length) {\n\t\t\tthis.currentChar = this.input[this.position];\n\t\t\tthis.position++;\n\t\t} else {\n\t\t\tthis.currentChar = null;\n\t\t}\n\t}\n\n\tprivate advanceCommit(): void {\n\t\tthis.advance();\n\t\tthis.commit();\n\t}\n\n\tprivate commit(): void {\n\t\tif (this.position > this.oldPosition) {\n\t\t\tthis.oldPosition = this.position;\n\t\t}\n\t}\n\n\tprivate rollback(): void {\n\t\tif (this.position > this.oldPosition) {\n\t\t\tthis.position = this.oldPosition - 1;\n\t\t\tthis.advance();\n\t\t}\n\t}\n\n\tprivate skipWhitespace(): void {\n\t\tlet currentChar = this.getCurrentChar();\n\t\twhile (currentChar && /[^\\S\\n]/.test(currentChar)) {\n\t\t\tthis.advance();\n\t\t\tcurrentChar = this.getCurrentChar();\n\t\t}\n\t\tthis.commit();\n\t}\n\n\tprivate skipComment(): void {\n\t\tif (this.getCurrentChar() === \"/\") {\n\t\t\tthis.advance();\n\t\t\tif (this.getCurrentChar() === \"/\") {\n\t\t\t\t// 1行コメント（//）の処理\n\t\t\t\tthis.advance();\n\t\t\t\tlet currentChar = this.getCurrentChar();\n\t\t\t\twhile (this.currentChar && currentChar !== \"\\n\") {\n\t\t\t\t\tthis.advance();\n\t\t\t\t\tcurrentChar = this.getCurrentChar();\n\t\t\t\t}\n\t\t\t\tthis.commit();\n\t\t\t} else if (this.getCurrentChar() === \"*\") {\n\t\t\t\t// 複数行コメント（/*...*/）の処理\n\t\t\t\tthis.advance();\n\t\t\t\tlet currentChar = this.getCurrentChar();\n\t\t\t\twhile (currentChar && !(currentChar === \"*\" && this.getCurrentChar(1) === \"/\")) {\n\t\t\t\t\tif (currentChar === \"\\n\") {\n\t\t\t\t\t\tthis.row_counter++;\n\t\t\t\t\t}\n\t\t\t\t\tthis.advance();\n\t\t\t\t\tcurrentChar = this.getCurrentChar();\n\t\t\t\t}\n\t\t\t\tthis.commit();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate newline(): { type: string; value: string } | null {\n\t\tif (this.getCurrentChar() === \"\\n\") {\n\t\t\tthis.row_counter++;\n\t\t\tthis.advanceCommit();\n\t\t\treturn { type: \"NEWLINE\", value: \"\\n\" };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate identifier(): { type: string; value: string } | null {\n\t\tlet idStr = \"\";\n\t\tlet currentChar = this.getCurrentChar();\n\t\tif (currentChar && /[a-zA-Z_]/.test(currentChar)) {\n\t\t\tidStr += currentChar;\n\t\t\tthis.advance();\n\t\t\tcurrentChar = this.getCurrentChar();\n\t\t\twhile (currentChar && /[0-9a-zA-Z_]/.test(currentChar)) {\n\t\t\t\tidStr += currentChar;\n\t\t\t\tthis.advance();\n\t\t\t\tcurrentChar = this.getCurrentChar();\n\t\t\t}\n\t\t}\n\t\tif (idStr) {\n\t\t\tthis.commit();\n\t\t\treturn { type: \"IDENTIFIER\", value: idStr };\n\t\t}\n\t\tthis.rollback();\n\t\treturn null;\n\t}\n\n\tprivate number(): { type: string; value: number } | null {\n\t\tlet numberStr = \"\";\n\t\twhile (this.currentChar && /[0-9]/.test(this.currentChar)) {\n\t\t\tnumberStr += this.currentChar;\n\t\t\tthis.advance();\n\t\t}\n\t\tif (numberStr) {\n\t\t\tthis.commit();\n\t\t\treturn { type: \"NUMBER\", value: parseFloat(numberStr) }; // 数字を number 型に変換\n\t\t}\n\t\tthis.rollback();\n\t\treturn null;\n\t}\n\n\tprivate string(): { type: string; value: string } | null {\n\t\tlet stringStr = \"\";\n\t\tlet quote = this.getCurrentChar();\n\t\tlet is_multi_line = false;\n\t\tif (quote === \"`\") {\n\t\t\tis_multi_line = true;\n\t\t}\n\t\tif (quote === '\"' || quote === \"'\" || is_multi_line) {\n\t\t\tthis.advance();\n\t\t\tlet currentChar = this.getCurrentChar();\n\t\t\twhile (currentChar && currentChar !== quote && (is_multi_line || currentChar !== \"\\n\")) {\n\t\t\t\tstringStr += currentChar;\n\t\t\t\tif (currentChar === \"\\n\") {\n\t\t\t\t\tthis.row_counter++;\n\t\t\t\t}\n\t\t\t\tthis.advance();\n\t\t\t\tcurrentChar = this.getCurrentChar();\n\t\t\t}\n\t\t\tif (currentChar === quote) {\n\t\t\t\tthis.advanceCommit();\n\t\t\t\treturn { type: \"STRING\", value: stringStr };\n\t\t\t}\n\t\t}\n\t\tthis.rollback();\n\t\treturn null;\n\t}\n\n\tprivate operator(): { type: string; value: string } | null {\n\t\tlet currentChar = this.getCurrentChar();\n\t\tswitch (currentChar) {\n\t\t\tcase \"+\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\treturn { type: \"PLUS\", value: \"+\" };\n\t\t\tcase \"-\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\treturn { type: \"MINUS\", value: \"-\" };\n\t\t\tcase \"*\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\tif (this.getCurrentChar() === \"*\") {\n\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\treturn { type: \"POWER\", value: \"**\" };\n\t\t\t\t}\n\t\t\t\treturn { type: \"MULTIPLY\", value: \"*\" };\n\t\t\tcase \"^\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\treturn { type: \"POWER\", value: \"^\" };\n\t\t\tcase \"/\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\treturn { type: \"DIVIDE\", value: \"/\" };\n\t\t\tcase \"%\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\treturn { type: \"MODULO\", value: \"%\" };\n\t\t\tcase \"|\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\tif (this.getCurrentChar() === \"|\") {\n\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\treturn { type: \"OR\", value: \"||\" };\n\t\t\t\t}\n\t\t\t\treturn { type: \"BIT_OR\", value: \"|\" };\n\t\t\tcase \"&\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\tif (this.getCurrentChar() === \"&\") {\n\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\treturn { type: \"AND\", value: \"&&\" };\n\t\t\t\t}\n\t\t\t\treturn { type: \"BIT_AND\", value: \"&\" };\n\t\t\tcase \"<\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\tif (this.getCurrentChar() === \"=\") {\n\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\treturn { type: \"LESS_THAN_OR_EQUAL\", value: \"<=\" };\n\t\t\t\t} else if (this.getCurrentChar() === \"<\") {\n\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\treturn { type: \"SHIFT_LEFT\", value: \"<<\" };\n\t\t\t\t}\n\t\t\t\treturn { type: \"LESS_THAN\", value: \"<\" };\n\t\t\tcase \">\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\tif (this.getCurrentChar() === \"=\") {\n\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\treturn { type: \"GREATER_THAN_OR_EQUAL\", value: \">=\" };\n\t\t\t\t} else if (this.getCurrentChar() === \">\") {\n\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\treturn { type: \"SHIFT_RIGHT\", value: \">>\" };\n\t\t\t\t}\n\t\t\t\treturn { type: \"GREATER_THAN\", value: \">\" };\n\t\t\tcase \"=\":\n\t\t\t\tthis.advanceCommit();\n\t\t\t\tif (this.getCurrentChar() === \"=\") {\n\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\tif (this.getCurrentChar() === \"=\") {\n\t\t\t\t\t\tthis.advanceCommit();\n\t\t\t\t\t\treturn { type: \"TRIPLE_EQUALS\", value: \"===\" };\n\t\t\t\t\t}\n\t\t\t\t\treturn { type: \"EQUALS\", value: \"==\" };\n\t\t\t\t}\n\t\t\t\treturn { type: \"ASSIGN\", value: \"=\" };\n\t\t\tdefault:\n\t\t\t\tthis.rollback();\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate semicolon(): { type: string; value: string } | null {\n\t\tif (this.currentChar === \";\") {\n\t\t\tthis.advance();\n\t\t\treturn { type: \"SEMICOLON\", value: \";\" };\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic tokenize(): { type: string; value: any }[] {\n\t\tconst tokens: { type: string; value: any }[] = [];\n\n\t\twhile (this.getCurrentChar() !== null) {\n\t\t\t// 空白\n\t\t\tthis.skipWhitespace();\n\t\t\t// コメント\n\t\t\tthis.skipComment();\n\n\t\t\tlet token,\n\t\t\t\tcontinueFlag = false;\n\t\t\tfor (let func of this.funcList) {\n\t\t\t\tif ((token = func())) {\n\t\t\t\t\ttokens.push(token);\n\t\t\t\t\tcontinueFlag = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (continueFlag) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// 未知の文字があればエラー\n\t\t\tthis.logError(`Unknown character: \"${this.getCurrentChar()}\"`);\n\t\t}\n\n\t\treturn tokens;\n\t}\n\n\tprivate logError(message: string): void {\n\t\tthrow new LexerError(`${message} (${this.row_counter}{${this.position}})`);\n\t}\n}\n\nexport { Lexer, Token };\n"
  ]
}